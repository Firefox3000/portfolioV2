.textInput--container {
  margin-bottom: 2rem;
  position: relative;
  width: 300px;

  label {
    font-size: 1rem;
    position: absolute;
    margin-left: .6rem;
    padding: 0 .2rem;
    transform-origin: top left;
    transform: translate(0, -2.2rem) scale(1);
    transition: all .1s ease-out; //speed
  }

  input {
    border: none;
    font-size: 16px;
    outline: 0;
    padding: 1rem .8rem;
    width: 100%;
    background: none;

    color: rgba(0, 0, 0, 0.6);
    @include rounded(.25rem);
    border: 1px solid rgba(0, 0, 0, 0.12);

    &::placeholder {
      opacity: 0;
      color: rgba(0, 0, 0, 0.6);
      transition: all .1s ease-out;
    }

    &:focus::placeholder {
      opacity: 1;
    }

    // focused
    &:focus {
      color: rgba(0, 0, 0, 0.87);
      border-color: var(--col-primary);

      &+label {
        color: var(--col-primary);
      }
    }

    // error
    &:focus:invalid {
      border-color: var(--col-error);

      &+label {
        color: var(--col-error);
      }
    }

    // if label active or text is filled
    &:focus+label,
    &:not(:placeholder-shown)+label {
      //move the x coordinate and reduce size
      transform: translate(0, -3.7rem) scale(.75);
      background-color: var(--white);
    }
  }
}

.textInput--large {
  position: relative;

  label {
    top: 0;
    left: 0;
    transform: translate(0, 1rem) scale(1);
  }

  textarea {
    resize: none;
    border: none;
    font-size: 16px;
    outline: 0;
    padding: 1rem .8rem;
    width: 100%;
    background: none;

    color: rgba(0, 0, 0, 0.6);
    @include rounded(.25rem);
    border: 1px solid rgba(0, 0, 0, 0.12);

    &::placeholder {
      opacity: 0;
      color: rgba(0, 0, 0, 0.6);
      transition: all .1s ease-out;
    }

    &:focus::placeholder {
      opacity: 1;
    }

    // focused
    &:focus {
      color: rgba(0, 0, 0, 0.87);
      border-color: var(--col-primary);

      &+label {
        color: var(--col-primary);
      }
    }

    // error
    &:focus:invalid {
      border-color: var(--col-error);

      &+label {
        color: var(--col-error);
      }
    }

    // if label active or text is filled
    &:focus+label,
    &:not(:placeholder-shown)+label {
      //move the x coordinate and reduce size
      transform: translate(0, -.4rem) scale(.75);
      background-color: var(--white);
    }
  }
}

// buttons
body .button {
  text-transform: uppercase;
  font-weight: bold;
  color: var(--col-primary);
  border: 1px solid rgba(0, 0, 0, 0.12);
  padding: .6rem .8rem;
  @include rounded(.25rem);
  position: relative;
  overflow: hidden;
  transition: all .1s ease-out;

  &::before {
    content: "";
    background: rgba(98, 0, 238, 0.12);
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform: translate(-50%, -50%);
    z-index: -1;
    border-radius: 100rem;
    transition: all 0.3s ease-out;
  }

  &:hover {
    background: rgba(98, 0, 238, 0.04);

    &::before {
      width: 10rem;
      height: 10rem;
    }
  }

  &:focus {
    background: rgba(98, 0, 238, 0.12);
  }
}
