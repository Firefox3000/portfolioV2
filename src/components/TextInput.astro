---
interface Props {
	label?: string;
	name?: string;
	value?: string;
	required?: boolean;
}

const { label, name, value, required } = Astro.props;
---

<div class="relative">
	<input
		class="text-base outline-none px-4 py-3 w-full rounded"
		id={name}
		name={name}
		placeholder={label}
		required={required}
		value={value}
	/>
	<label class="text-base absolute ml-1 py-0 px-3 left-0 -top-1 transition" for={name}
		>{label}</label
	>
</div>

<style lang="postcss">
label {
  transform-origin: top left;
  transform: translate(0, 1.05rem) scale(1);  
  color: rgba(var(--rgbText), 1);
}

input{
  background: var(--background);

  color: rgba(var(--rgbText), 0.6);
  border: 1px solid rgba(var(--rgbText), 0.5);

  /* focused */
  &:focus {
    color: rgba(var(--rgbText), 0.87);
    border-color: var(--primary);

    & ~ label {
      color: var(--primary);
    }
  }

  /* placeholder base */
  &::placeholder {
    opacity: 0;
    color: rgba(var(--rgbText), 0.6);
    transition: all 0.1s ease-out;
  }

  /* show placeholder top on focus */
  &:focus::placeholder {
    opacity: 1;
  }

  /* error */
  &:focus:invalid {
    border-color: var(--error);

    & ~ label {
      color: var(--error);
    }
  }

  /* if label active or text is filled */
  &:focus ~ label,
  &:not(:placeholder-shown) ~ label {
    transform: translateY(-0.35rem) scale(0.75);
    background-color: var(--background);
  }
}
</style>
